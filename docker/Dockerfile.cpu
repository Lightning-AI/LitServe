# Use a specific version of Python image with uv pre-installed for reproducibility
FROM ghcr.io/astral-sh/uv:0.7.8-python3.12-bookworm-slim AS builder

# Set system Python as default
ENV UV_SYSTEM_PYTHON=1

# Install the project into `/app`
WORKDIR /app

# Enable bytecode compilation and copy mode for better performance
ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_CACHE_DIR=/opt/uv-cache/

# Install PyTorch CPU dependencies first (better layer caching)
RUN --mount=type=cache,target=/opt/uv-cache \
    uv pip install \
        torch torchvision torchaudio \
        --index-url https://download.pytorch.org/whl/cpu

# Install litserve in a separate layer
RUN --mount=type=cache,target=/opt/uv-cache \
    uv pip install litserve --no-deps && \
    uv pip install litserve

# Start fresh with minimal image
FROM python:3.12-slim-bookworm

# Set system Python as default
ENV UV_SYSTEM_PYTHON=1

# Copy Python environment from builder
COPY --from=builder /usr/local /usr/local

# Create app user and required directories
RUN groupadd -r app && useradd -r -g app app && \
    mkdir -p /home/app/.local/share && \
    chown -R app:app /home/app

# Switch to non-root user
USER app

# Set working directory
WORKDIR /app

# Expose port
EXPOSE 8000

# Add metadata labels
LABEL org.opencontainers.image.title="LitServe CPU" \
      org.opencontainers.image.description="LitServe API server (CPU version)" \
      org.opencontainers.image.source="https://github.com/Lightning-AI/litserve"

# Reset the entrypoint
ENTRYPOINT []
